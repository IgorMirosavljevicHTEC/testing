name: PR test
on:
#  push:
#    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, closed]
  workflow_dispatch:
env:
  PR_ID: ${{github.event.number}}
  TEST_PATH: test_folder
  #ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
  BR_NAME: $GITHUB_REF_NAME
  BR_NAME2: ${{github.ref_name}}

jobs:
  test_PR:
    name: Tests PR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with: 
          token: ${{ secrets.GH_TEST_TOKEN }}
      - name: Testing
        run: |
          echo 'BR1'
          echo ${{ env.BR_NAME }}
          echo 'BR2'
          echo ${{ env.BR_NAME2 }}
          echo 'BRANCH NAME'
          echo ${GITHUB_REF##*/}
          echo 'BRANCH NAME SOURCE'
          #echo $GIT_HEAD_REF
          echo ${{github.head_ref}}
          echo 'BRANCH NAME TARGET'
          echo ${{github.base_ref}}
          mkdir ${{env.TEST_PATH}}_${{env.PR_ID}}
          cd ${{env.TEST_PATH}}_${{env.PR_ID}}
          date > PR_test.txt
          cd $GITHUB_WORKSPACE
          pwd
          ls -la
          echo 'check gha ref name'
          echo $GITHUB_REF_NAME
          echo 'check git branch'
          git branch
          echo 'check git status'
          git status
          git log >> PR_test.txt
          echo 'git log from file'
          cat PR_test.txt
          echo 'try gh sha var'
          echo $GITHUB_SHA
          echo 'cutdown test'
          echo $GITHUB_SHA | cut -c 1-6
          git config --global user.email "compy@example.com"
          git config --global user.name "compy"
          git add .
          git commit -m "PR_test update"
          #git push
          #git push origin HEAD:$GITHUB_REF_NAME
          #git push â€“set-upstream origin main
          echo 'PR_ID'
          echo ${{env.PR_ID}}
          echo 'old env'
          echo ${{env.TEST_PATH}}
          echo 'gh event:${{github.event_name}}'
          echo "BRANCH=$(echo $GITHUB_REF | cut -d'/' -f 3)" >> $GITHUB_ENV
          echo 'branch env'
          echo ${{env.BRANCH}}
          echo 'branch var'
          echo $BRANCH
          #if [ $GITHUB_EVENT_NAME == 'pull_request'];then
          if [[ ${{github.event_name}} == 'pull_request' ]]; then
            echo 'THIS IS PR EVENT'
            #echo $TEST_PATH="${TEST_PATH}_${PR_ID}" >> "$GITHUB_ENV"
            #echo "::set-env name=TEST_PATH::${{ env.TEST_PATH }}_${{ env.PR_ID }}"
            #echo "TEST_PATH=${{ env.TEST_PATH }}_${{ env.PR_ID }}" >> $GITHUB_ENV
            echo "TEST_PATH=$(echo "$TEST_PATH-$PR_ID")" >> $GITHUB_ENV
            echo ${{env.TEST_PATH}}
          else
            echo 'THIS IS NOT PR EVENT'
          fi
      - name: Test
        run: |
          echo ${{env.TEST_PATH}}
          echo ${TEST_PATH//-$PR_ID/}
          echo ${${{env.TEST_PATH}}//-${{env.PR_ID}}/}
            
      - name: Cleanup
        if: ${{github.event.action=='closed' && github.event.pull_request.merged==true}}
        #if: ${{github.event.pull_request.merged==true}}
        run: |
          echo 'PR closed'
          pwd
          echo $PR_ID
          echo $GITHUB_REF_NAME

          
          
          
          
          
